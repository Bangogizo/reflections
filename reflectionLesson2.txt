What happens when you initialize a repository? Why do you need to do it?
Answer: when a directory is initialize as a repository, an empty Git repository is initialized.And this is needed to monitor changes made in that repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Answer:The working directory is where file are created and saved while the staging area is where files that are to be committed are kept.

How can you use the staging area to make sure you have one commit per logical change?
Answer:by comparing the value of the staging area to the repository before commiting to know if changes are necessary.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Answer:like a sandbox, Branches would be helpful when it comes to creating experimental features or ideas to be implemented later without breaking the master.

How do the diagrams help you visualize the branch structure?
Answer: Very vivid and helpful to understand the way branches are structured

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Answer: The reason why we merge two branches  is so to update changes made in the branches not yet in the master. And for representing it in a diagram form, this vividly shows how the structure of the master branch and the secondary branch are laid out.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
Answer: doing Git's automatically makes merging way faster than manual merge where the pain of going through the files to find what changed is quite an hassle and a slow process.
